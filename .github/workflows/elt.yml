---
name: LMU Baseball ETL

on:
  workflow_dispatch: {}
  schedule:
    - cron: '10 13 * * 1-6'   # Mon–Sat 13:10 UTC

concurrency:
  group: lmu-baseball-etl
  cancel-in-progress: false

jobs:
  run-etl:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Write SA JSON from secret to a temp file (only if secret is set)
      - name: Write Google creds file
        env:
          GOOGLE_CREDS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
        run: |
          if [ -n "$GOOGLE_CREDS_JSON" ]; then
            echo "$GOOGLE_CREDS_JSON" > "$RUNNER_TEMP/gcreds.json"
            echo "GOOGLE_APPLICATION_CREDENTIALS_JSON=$RUNNER_TEMP/gcreds.json" \
              >> "$GITHUB_ENV"
            python - <<'PY'
import json, os
p = os.environ["RUNNER_TEMP"] + "/gcreds.json"
with open(p, "r", encoding="utf-8") as f:
    j = json.load(f)
print("✅ Google SA email:", j.get("client_email", "<missing>"))
PY
          else
            echo "ℹ️ No GOOGLE_APPLICATION_CREDENTIALS_JSON; skipping."
          fi

      - name: Mask MySQL password
        if: ${{ secrets.MYSQL_PASSWORD != '' }}
        run: echo "::add-mask::${{ secrets.MYSQL_PASSWORD }}"

      - name: Export ETL env
        run: |
          {
            echo "GSHEET_ID=${{ secrets.GSHEET_ID }}"
            echo "GSHEET_TAB_NAME=${{ secrets.GSHEET_TAB_NAME }}"
            echo "GSHEET_GID=${{ secrets.GSHEET_GID }}"
            echo "RAW_TABLE=${{ secrets.RAW_TABLE }}"
            echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}"
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}"
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}"
            echo "MYSQL_DB=${{ secrets.MYSQL_DB }}"
          } >> "$GITHUB_ENV"

      - name: Run ETL (Google Sheets → MySQL)
        run: python etl/google_sheets_extract_load_raw.py

      - name: Row count check (optional)
        if: ${{ always() }}
        env:
          SQL_TABLE: ${{ secrets.RAW_TABLE }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DB: ${{ secrets.MYSQL_DB }}
        run: |
          python - <<'PY'
import os, pymysql
tbl = os.environ.get("SQL_TABLE", "raw_cauldron_scoreboard")
try:
    conn = pymysql.connect(
        host=os.environ["MYSQL_HOST"],
        user=os.environ["MYSQL_USER"],
        password=os.environ["MYSQL_PASSWORD"],
        database=os.environ["MYSQL_DB"],
        port=3306,
        connect_timeout=10,
    )
    with conn.cursor() as cur:
        cur.execute(f"SELECT COUNT(*) FROM `{tbl}`")
        print("Rows in", tbl, ":", cur.fetchone()[0])
    conn.close()
except Exception as e:
    print("Row count check skipped:", e)
PY
